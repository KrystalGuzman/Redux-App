{"version":3,"sources":["components/DateCard.js","actions/index.js","components/YearCard.js","components/TriviaCard.js","components/NumberCard.js","components/Home.js","components/Drawer.js","App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["connect","state","isLoading","date","error","getDate","dispatch","type","axios","get","then","res","console","log","data","payload","catch","err","props","class","Button","onClick","variant","color","Container","maxWidth","height","width","timeout","year","getYear","trivia","getTrivia","number","getNumber","Home","className","useStyles","makeStyles","list","fullList","TemporaryDrawer","side","classes","React","useState","left","setState","toggleDrawer","open","event","key","Drawer","onClose","role","onKeyDown","List","ListItem","button","component","Link","to","ListItemText","primary","Divider","App","exact","path","render","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initialState","store","createStore","action","applyMiddleware","thunk","logger","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f809d536.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {getDate} from '../actions/';\r\nimport Loader from 'react-loader-spinner';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\nconst DateCard = (props) =>{\r\n    // \r\n    console.log('props!!!', props)\r\n    return(\r\n        <div class='content'>\r\n        <h2>Random Date Fact</h2>\r\n        <Button onClick={props.getDate} variant=\"contained\" color=\"secondary\">Get Date!</Button><br/>\r\n        <Container maxWidth=\"sm\">\r\n        {!props.date && !props.isLoading && (\r\n          <h2>{props.date}</h2>\r\n        )}\r\n        {props.isLoading && (\r\n          <Loader\r\n            type=\"Puff\"\r\n            color=\"#00BFFF\"\r\n            height={100}\r\n            width={100}\r\n            timeout={3000} //3 secs\r\n          />\r\n        )}\r\n        {props.date && !props.isLoading && <h2>{props.date}</h2>}\r\n        </Container>\r\n      </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return{isLoading: state.isLoading,\r\n    date: state.date,\r\n    error: state.error}\r\n}\r\nexport default connect(mapStateToProps, {getDate})(DateCard);","import axios from 'axios';\r\n\r\nexport const LOADING = 'LOADING';\r\nexport const DATES = 'DATES';\r\nexport const ERROR = 'ERROR';\r\nexport const YEARS = 'YEARS';\r\nexport const TRIVIA = 'TRIVIA';\r\nexport const NUMBER = 'NUMBER';\r\n\r\n\r\nexport const getDate = () => {\r\n    return dispatch => {\r\n      dispatch({type:LOADING});\r\n      axios\r\n        .get('http://numbersapi.com/random/date')\r\n        .then(res => {\r\n          console.log(\"over here!\", res.data)\r\n          dispatch({type: DATES, payload: res.data});\r\n        })\r\n        .catch(err => {\r\n            console.log(\"error\", err)\r\n            dispatch({ type: ERROR, payload: err })\r\n        });\r\n    };\r\n  };\r\n\r\n  export const getYear = () => {\r\n    return dispatch => {\r\n      dispatch({type:LOADING});\r\n      axios\r\n        .get('http://numbersapi.com/random/year')\r\n        .then(res => {\r\n          console.log(\"over here!\", res.data)\r\n          dispatch({type: YEARS, payload: res.data});\r\n        })\r\n        .catch(err => {\r\n            console.log(\"error\", err)\r\n            dispatch({ type: ERROR, payload: err })\r\n        });\r\n    };\r\n  };\r\n  export const getTrivia = () => {\r\n    return dispatch => {\r\n      dispatch({type:LOADING});\r\n      axios\r\n        .get('http://numbersapi.com/random/trivia')\r\n        .then(res => {\r\n          console.log(\"over here!\", res.data)\r\n          dispatch({type: TRIVIA, payload: res.data});\r\n        })\r\n        .catch(err => {\r\n            console.log(\"error\", err)\r\n            dispatch({ type: ERROR, payload: err })\r\n        });\r\n    };\r\n  };\r\n  export const getNumber = () => {\r\n    return dispatch => {\r\n      dispatch({type:LOADING});\r\n      axios\r\n        .get('http://numbersapi.com/random/math')\r\n        .then(res => {\r\n          console.log(\"over here!\", res.data)\r\n          dispatch({type: NUMBER, payload: res.data});\r\n        })\r\n        .catch(err => {\r\n            console.log(\"error\", err)\r\n            dispatch({ type: ERROR, payload: err })\r\n        });\r\n    };\r\n  };","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {getYear} from '../actions/';\r\nimport Loader from 'react-loader-spinner';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\nconst YearCard = (props) =>{\r\n    // \r\n    console.log('props!!!', props)\r\n    return(\r\n        <div class='content'>\r\n        <h2>Random Year Fact</h2>\r\n        <Button onClick={props.getYear} variant=\"contained\" color=\"secondary\">Get Year!</Button><br/>\r\n        <Container maxWidth=\"sm\">\r\n        {!props.year && !props.isLoading && (\r\n          <h2>{props.year}</h2>\r\n        )}\r\n        {props.isLoading && (\r\n          <Loader\r\n            type=\"Puff\"\r\n            color=\"#00BFFF\"\r\n            height={100}\r\n            width={100}\r\n            timeout={3000} //3 secs\r\n          />\r\n        )}\r\n        {props.year && !props.isLoading && <h2>{props.year}</h2>}\r\n        </Container>\r\n      </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return{isLoading: state.isLoading,\r\n        year: state.year,\r\n    error: state.error}\r\n}\r\nexport default connect(mapStateToProps, {getYear})(YearCard);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {getTrivia} from '../actions/';\r\nimport Loader from 'react-loader-spinner';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\nconst TriviaCard = (props) =>{\r\n    // \r\n    console.log('props!!!', props)\r\n    return(\r\n        <div class='content'>\r\n        <h2>Random Trivia Fact</h2>\r\n        <Button onClick={props.getTrivia} variant=\"contained\" color=\"secondary\">Get Trivia!</Button><br/>\r\n        <Container maxWidth=\"sm\">\r\n        {!props.trivia && !props.isLoading && (\r\n          <h2>{props.trivia}</h2>\r\n        )}\r\n        {props.isLoading && (\r\n          <Loader\r\n            type=\"Puff\"\r\n            color=\"#00BFFF\"\r\n            height={100}\r\n            width={100}\r\n            timeout={3000} //3 secs\r\n          />\r\n        )}\r\n        {props.trivia && !props.isLoading && <h2>{props.trivia}</h2>}\r\n        </Container>\r\n      </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return{isLoading: state.isLoading,\r\n    trivia: state.trivia,\r\n    error: state.error}\r\n}\r\nexport default connect(mapStateToProps, {getTrivia})(TriviaCard);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {getNumber} from '../actions/';\r\nimport Loader from 'react-loader-spinner';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\nconst NumberCard = (props) =>{\r\n    // \r\n    console.log('props!!!', props)\r\n    return(\r\n        <div class='content'>\r\n        <h2>Random Number Fact</h2>\r\n        <Button onClick={props.getNumber} variant=\"contained\" color=\"secondary\">Get Number!</Button><br/>\r\n        <Container maxWidth=\"sm\">\r\n        {!props.number && !props.isLoading && (\r\n          <h2>{props.number}</h2>\r\n        )}\r\n        {props.isLoading && (\r\n          <Loader\r\n            type=\"Puff\"\r\n            color=\"#00BFFF\"\r\n            height={100}\r\n            width={100}\r\n            timeout={3000} //3 secs\r\n          />\r\n        )}\r\n        {props.number && !props.isLoading && <h2>{props.number}</h2>}\r\n        </Container>\r\n      </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return{isLoading: state.isLoading,\r\n    number: state.number,\r\n    error: state.error}\r\n}\r\nexport default connect(mapStateToProps, {getNumber})(NumberCard);","import React from \"react\";\r\n\r\nexport default function Home() {\r\n    return (\r\n    <section className=\"welcome-page\">\r\n      <header>\r\n        <h1>Random Fact Generator</h1>\r\n        <h3>The Random Fact Generator displays facts based on the category of your choosing.</h3>\r\n      </header>\r\n    </section>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\n\r\nexport default function TemporaryDrawer() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    left: false\r\n  });\r\n\r\n  const toggleDrawer = (side, open) => event => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [side]: open });\r\n  };\r\n\r\n  const sideList = side => (\r\n    <div\r\n      className={classes.list}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(side, false)}\r\n      onKeyDown={toggleDrawer(side, false)}\r\n    >\r\n        <List>\r\n        <ListItem button component={Link} to=\"/\">\r\n        <ListItemText primary=\"Home\" />\r\n      </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n      <ListItem button component={Link} to=\"/Date\">\r\n        <ListItemText primary=\"Date\" />\r\n      </ListItem>\r\n      <ListItem button component={Link} to=\"/Year\">\r\n        <ListItemText primary=\"Year\" />\r\n      </ListItem>\r\n      <ListItem button component={Link} to=\"/Trivia\">\r\n        <ListItemText primary=\"Trivia\" />\r\n      </ListItem>\r\n      <ListItem button component={Link} to=\"/Number\">\r\n        <ListItemText primary=\"Number\" />\r\n      </ListItem>\r\n      </List>\r\n\r\n    </div>\r\n  );\r\n\r\n\r\n  return (\r\n    <div>\r\n        <br></br>\r\n      <Button onClick={toggleDrawer('left', true)}  variant=\"contained\" color=\"secondary\">Menu</Button>\r\n      <Drawer open={state.left} onClose={toggleDrawer('left', false)}>\r\n        {sideList('left')}\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport DateCard from './components/DateCard';\nimport YearCard from './components/YearCard';\nimport TriviaCard from './components/TriviaCard';\nimport NumberCard from './components/NumberCard';\nimport Home from './components/Home'\nimport Drawer from './components/Drawer'\nimport {Route} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Drawer />\n        <Route exact path=\"/\" render={()=> <Home />} />\n        <Route exact path=\"/Date\" render={props => <DateCard {...props} />} />\n        <Route exact path=\"/Year\" render={props => <YearCard {...props} />} />\n        <Route exact path=\"/Trivia\" render={props => <TriviaCard {...props} />} />\n        <Route exact path=\"/Number\" render={props => <NumberCard {...props} />} />\n        \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {LOADING, DATES, YEARS, TRIVIA, NUMBER, ERROR} from '../actions/index';\r\n\r\nexport const initialState={\r\n    date: null,\r\n    isLoading:false,\r\n    error: ''\r\n};\r\nexport const Reducer = (state = initialState, action) =>{\r\n    console.log('state', state);\r\n    console.log('action', action)\r\n    switch (action.type) {\r\n        case LOADING:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n                error: ''\r\n            }        \r\n        case DATES:\r\n            return{\r\n                ...state,\r\n                isLoading:false,\r\n                date:action.payload\r\n            }\r\n        case YEARS:\r\n            return{\r\n                ...state,\r\n                isLoading:false,\r\n                year:action.payload\r\n            }\r\n        case TRIVIA:\r\n            return{\r\n                ...state,\r\n                isLoading:false,\r\n                trivia:action.payload\r\n            }\r\n        case NUMBER:\r\n            return{\r\n                ...state,\r\n                isLoading:false,\r\n                number:action.payload\r\n            }         \r\n        case ERROR:\r\n            return{\r\n                ...state,\r\n                isLoading:false,\r\n                error: action.payload\r\n            }\r\n        \r\n        default: \r\n        return state;\r\n    }\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware} from 'redux';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nimport {Reducer} from './reducers/index';\n\n\nconst store = createStore(Reducer, applyMiddleware(thunk,logger));\n\nReactDOM.render(<Provider store={store}><Router><App /></Router></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}